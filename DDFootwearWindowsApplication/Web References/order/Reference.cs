//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DDFootwearWindowsApplication.order {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OrdersServicesSoap", Namespace="http://tempuri.org/")]
    public partial class OrdersServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback orderProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback calculateBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback DiscountCalculationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OrdersServices() {
            this.Url = global::DDFootwearWindowsApplication.Properties.Settings.Default.DDFootwearWindowsApplication_order_OrdersServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertOrderCompletedEventHandler insertOrderCompleted;
        
        /// <remarks/>
        public event orderProductCompletedEventHandler orderProductCompleted;
        
        /// <remarks/>
        public event calculateBillCompletedEventHandler calculateBillCompleted;
        
        /// <remarks/>
        public event DiscountCalculationCompletedEventHandler DiscountCalculationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertOrder(string oID, string oDate, string email, string dis) {
            object[] results = this.Invoke("insertOrder", new object[] {
                        oID,
                        oDate,
                        email,
                        dis});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertOrderAsync(string oID, string oDate, string email, string dis) {
            this.insertOrderAsync(oID, oDate, email, dis, null);
        }
        
        /// <remarks/>
        public void insertOrderAsync(string oID, string oDate, string email, string dis, object userState) {
            if ((this.insertOrderOperationCompleted == null)) {
                this.insertOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOrderOperationCompleted);
            }
            this.InvokeAsync("insertOrder", new object[] {
                        oID,
                        oDate,
                        email,
                        dis}, this.insertOrderOperationCompleted, userState);
        }
        
        private void OninsertOrderOperationCompleted(object arg) {
            if ((this.insertOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertOrderCompleted(this, new insertOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/orderProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool orderProduct(string pID, int qty, string oID, string usermail, string stockID) {
            object[] results = this.Invoke("orderProduct", new object[] {
                        pID,
                        qty,
                        oID,
                        usermail,
                        stockID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void orderProductAsync(string pID, int qty, string oID, string usermail, string stockID) {
            this.orderProductAsync(pID, qty, oID, usermail, stockID, null);
        }
        
        /// <remarks/>
        public void orderProductAsync(string pID, int qty, string oID, string usermail, string stockID, object userState) {
            if ((this.orderProductOperationCompleted == null)) {
                this.orderProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnorderProductOperationCompleted);
            }
            this.InvokeAsync("orderProduct", new object[] {
                        pID,
                        qty,
                        oID,
                        usermail,
                        stockID}, this.orderProductOperationCompleted, userState);
        }
        
        private void OnorderProductOperationCompleted(object arg) {
            if ((this.orderProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.orderProductCompleted(this, new orderProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/calculateBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double calculateBill(string pID, int qty) {
            object[] results = this.Invoke("calculateBill", new object[] {
                        pID,
                        qty});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void calculateBillAsync(string pID, int qty) {
            this.calculateBillAsync(pID, qty, null);
        }
        
        /// <remarks/>
        public void calculateBillAsync(string pID, int qty, object userState) {
            if ((this.calculateBillOperationCompleted == null)) {
                this.calculateBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OncalculateBillOperationCompleted);
            }
            this.InvokeAsync("calculateBill", new object[] {
                        pID,
                        qty}, this.calculateBillOperationCompleted, userState);
        }
        
        private void OncalculateBillOperationCompleted(object arg) {
            if ((this.calculateBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.calculateBillCompleted(this, new calculateBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DiscountCalculation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double DiscountCalculation(string oID, double total) {
            object[] results = this.Invoke("DiscountCalculation", new object[] {
                        oID,
                        total});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void DiscountCalculationAsync(string oID, double total) {
            this.DiscountCalculationAsync(oID, total, null);
        }
        
        /// <remarks/>
        public void DiscountCalculationAsync(string oID, double total, object userState) {
            if ((this.DiscountCalculationOperationCompleted == null)) {
                this.DiscountCalculationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDiscountCalculationOperationCompleted);
            }
            this.InvokeAsync("DiscountCalculation", new object[] {
                        oID,
                        total}, this.DiscountCalculationOperationCompleted, userState);
        }
        
        private void OnDiscountCalculationOperationCompleted(object arg) {
            if ((this.DiscountCalculationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DiscountCalculationCompleted(this, new DiscountCalculationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void insertOrderCompletedEventHandler(object sender, insertOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void orderProductCompletedEventHandler(object sender, orderProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class orderProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal orderProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void calculateBillCompletedEventHandler(object sender, calculateBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class calculateBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal calculateBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DiscountCalculationCompletedEventHandler(object sender, DiscountCalculationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DiscountCalculationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DiscountCalculationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591